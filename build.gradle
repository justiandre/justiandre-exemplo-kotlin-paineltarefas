buildscript {
    ext {
        kotlinVersion = "1.2.40"
        springBootVersion = "2.0.1.RELEASE"
    }
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "eclipse"
apply plugin: "jacoco"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

group = "br.com.justiandre"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = 1.8


jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled true
        html.destination "${buildDir}/reports/coverage"
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, excludes: ["**/model/**", "**/*ApplicationStart**"])
        })
    }
}

test.finalizedBy(jacocoTestReport)

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile("io.springfox:springfox-swagger2:2.8.0")
    compile("io.springfox:springfox-swagger-ui:2.8.0")
    compile("de.flapdoodle.embed:de.flapdoodle.embed.mongo:1.50.5")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}
